package ar.com.lujan.asistencia.vista;


import ar.com.lujan.asistencia.*;
import ar.com.lujan.asistencia.modelo.Profesor;
import ar.com.lujan.asistencia.service.ProfesorRN;

import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Usuario
 */
public class AgregarProfesorUI extends javax.swing.JDialog {

    /**
     * Creates new form AgregarProfesorUI
     */
        ProfesorRN profesorRN = new ProfesorRN();

    public AgregarProfesorUI(java.awt.Frame parent, boolean modal,String operacion) {
        super(parent, modal);
        initComponents();
        this.setOperacion(operacion);
        
    }
    
    public AgregarProfesorUI(java.awt.Frame parent, boolean modal,String operacion,Profesor p) {
        super(parent, modal);
        initComponents();
        jtfApellido.setText(p.getApellido());
        jtfNombre.setText(p.getNombre());
        jtfDNI.setText(String.valueOf(p.getDni()));
        if (p.getGenero().equals((String)"M")) {jcbbGenero.setSelectedIndex(0);}
        if (p.getGenero().equals((String)"F")) {jcbbGenero.setSelectedIndex(1);}
        jtfID.setText(String.valueOf(p.getIdProfesor()));
        //jtfFechaDeNacimiento.setText(p.getFechaDeNacimiento());
        jtfEmail.setText(p.getEmail());
        jchkEstado.setEnabled(p.isEstado());
        jbGrabar.setText("Actualizar");
        setTitle("Editar Profesor");
        jlAgregarProfesor.setText("Editar profesor");
        profesor = p;
        this.setOperacion(operacion);
    }

    private AgregarProfesorUI(JFrame jFrame, boolean b) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private int grabarProfesor(String operacion){
        //comprobar los datos obligatorios
            int r=0;
            if (jtfApellido.getText().equals("") || jtfNombre.getText().equals("") || jtfDNI.getText().equals("")){
               JOptionPane.showMessageDialog(this,"Debe completar los campos obligatorios");
            }
            else
            {
            //comprobar que los tipos de dato sean correctos
                if (this.isNumeric(jtfDNI.getText())){ 
                    //arma el objeto y se lo mando a RN
                    
                    Profesor p = new Profesor();
                    
                    if (this.operacion=="EDITAR"){
                        p.setIdProfesor(Integer.parseInt(jtfID.getText()));
                    }
                    //arma el objeto y se lo mando a RN
                   
                    p.setApellido(jtfApellido.getText());
                    p.setNombre(jtfNombre.getText());
                    p.setDni(Integer.parseInt(jtfDNI.getText()));
                    p.setGenero(String.valueOf(jcbbGenero.getSelectedItem().toString().charAt(0)));
                    //p.setFechaDeNacimiento(jtfFechaDeNacimiento.getText());
                    p.setEmail(jtfEmail.getText());
                    p.setEstado(jchkEstado.isEnabled());
                    //graba
                    r=profesorRN.agregarEditarProfesor(p, operacion);
                }
                else {
                        JOptionPane.showMessageDialog(this,"Error en el tipo de datos");
                } 
            }
        return r;
        }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlAgregarProfesor = new javax.swing.JLabel();
        jbSalir = new javax.swing.JButton();
        jbGrabar = new javax.swing.JButton();
        jlEmail = new javax.swing.JLabel();
        jtfNombre = new javax.swing.JTextField();
        jtfID = new javax.swing.JTextField();
        jtfDNI = new javax.swing.JTextField();
        jlID = new javax.swing.JLabel();
        jcbbGenero = new javax.swing.JComboBox<>();
        jtfFechaDeNacimiento = new javax.swing.JTextField();
        jtfEmail = new javax.swing.JTextField();
        jchkEstado = new javax.swing.JCheckBox();
        jlNombre = new javax.swing.JLabel();
        jlDNI = new javax.swing.JLabel();
        jlApellido = new javax.swing.JLabel();
        jlGenero = new javax.swing.JLabel();
        jlFechaDeNacimiento = new javax.swing.JLabel();
        jtfApellido = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);

        jlAgregarProfesor.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlAgregarProfesor.setText("Agregar Profesor");

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jbGrabar.setText("Grabar");
        jbGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGrabarActionPerformed(evt);
            }
        });

        jlEmail.setText("E-mail");

        jtfNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfNombreActionPerformed(evt);
            }
        });

        jtfID.setEnabled(false);
        jtfID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfIDActionPerformed(evt);
            }
        });

        jtfDNI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfDNIActionPerformed(evt);
            }
        });

        jlID.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jlID.setText("ID");

        jcbbGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Masculino", "Femenino" }));

        jtfFechaDeNacimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfFechaDeNacimientoActionPerformed(evt);
            }
        });

        jtfEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfEmailActionPerformed(evt);
            }
        });

        jchkEstado.setText("Activo");
        jchkEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jchkEstadoActionPerformed(evt);
            }
        });

        jlNombre.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jlNombre.setText("Nombre");

        jlDNI.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jlDNI.setText("DNI");

        jlApellido.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jlApellido.setText("Apellido");

        jlGenero.setText("GÃ©nero");

        jlFechaDeNacimiento.setText("Fecha de Nacimiento");

        jtfApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfApellidoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbGrabar)
                .addGap(38, 38, 38)
                .addComponent(jbSalir)
                .addGap(141, 141, 141))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(jlAgregarProfesor))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jlApellido)
                            .addComponent(jlNombre)
                            .addComponent(jlDNI)
                            .addComponent(jlGenero)
                            .addComponent(jlFechaDeNacimiento)
                            .addComponent(jlEmail)
                            .addComponent(jlID))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jchkEstado)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jtfNombre)
                                .addComponent(jtfDNI)
                                .addComponent(jcbbGenero, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jtfFechaDeNacimiento)
                                .addComponent(jtfEmail)
                                .addComponent(jtfID, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jtfApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlAgregarProfesor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlID))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlApellido))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlNombre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlDNI))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbbGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlGenero))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfFechaDeNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlFechaDeNacimiento))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlEmail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jchkEstado)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbGrabar)
                    .addComponent(jbSalir))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed

        // TODO add your handling code here:
        this.cerrar();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGrabarActionPerformed
        // TODO add your handling code here:
      if (operacion.equals("AGREGAR")){ 
                if (this.grabarProfesor("AGREGAR") == 1) { //comprobar si grabÃ³
                this.setGrabo(true);
                this.cerrar();
                } 
  
        }
        if (operacion.equals("EDITAR")){
            if (this.grabarProfesor("EDITAR") == 1) { //comprobar si grabÃ³
                this.setGrabo(true);
                this.cerrar();
            } 
        }
    }//GEN-LAST:event_jbGrabarActionPerformed

    private void jtfNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfNombreActionPerformed

    private void jtfIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfIDActionPerformed

    private void jtfDNIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfDNIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfDNIActionPerformed

    private void jtfFechaDeNacimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfFechaDeNacimientoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfFechaDeNacimientoActionPerformed

    private void jtfEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfEmailActionPerformed

    private void jchkEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchkEstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jchkEstadoActionPerformed

    private void jtfApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfApellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfApellidoActionPerformed

    
    
    
    /**
     * @param args the command line arguments
     */
   
    private void cerrar(){

        this.dispose();
    }
    
    private boolean isNumeric(String s){
        boolean r = false;
        try{
            Integer.parseInt(s);
            r=true;
        }
        catch(Exception ex){
            r=false;
        }
        return r;
        
    }
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgregarProfesorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgregarProfesorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgregarProfesorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgregarProfesorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AgregarProfesorUI dialog = new AgregarProfesorUI(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    //Variables Personalizadas
    private Profesor profesor;
    private boolean grabo = false;
    private String operacion;
   


    public String getOperacion() {
        return operacion;
    }

    public void setOperacion(String operacion) {
        this.operacion = operacion;
    }

     
    public Profesor getProfesor() {
        return profesor;
    }
    public void setAlumno(Profesor profesor) {
        this.profesor = profesor;
    }
    
    public boolean isGrabo() {
        return grabo;
    }

    public void setGrabo(boolean Grabo) {
        this.grabo = Grabo;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbGrabar;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<String> jcbbGenero;
    private javax.swing.JCheckBox jchkEstado;
    private javax.swing.JLabel jlAgregarProfesor;
    private javax.swing.JLabel jlApellido;
    private javax.swing.JLabel jlDNI;
    private javax.swing.JLabel jlEmail;
    private javax.swing.JLabel jlFechaDeNacimiento;
    private javax.swing.JLabel jlGenero;
    private javax.swing.JLabel jlID;
    private javax.swing.JLabel jlNombre;
    private javax.swing.JTextField jtfApellido;
    private javax.swing.JTextField jtfDNI;
    private javax.swing.JTextField jtfEmail;
    private javax.swing.JTextField jtfFechaDeNacimiento;
    private javax.swing.JTextField jtfID;
    private javax.swing.JTextField jtfNombre;
    // End of variables declaration//GEN-END:variables
}
